{"version":3,"sources":["img/cover.png","components/SingleCard.js","img/helmet-1.png","img/potion-1.png","img/ring-1.png","img/scroll-1.png","img/shield-1.png","img/sword-1.png","Sounds/dingcorrect.wav","Sounds/shuffle.wav","Sounds/cardflip.wav","Sounds/dingwrong.wav","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","coverImage","id","cardImages","helmetImage","matched","potionImage","ringImage","scrollImage","shieldImage","swordImage","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","match","Audio","matchCorrect","shuffle_cards","cardFlip","shuffle","wrong","matchWrong","shuffleCards","shuffledCards","sort","Math","random","map","play","useEffect","isMatch","console","log","prevCards","resetTurn","setTimeout","counter","setCounter","timer","setInterval","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8d7d708.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover.b35cfd28.png\";","import React from 'react';\nimport './SingleCard.css';\n\nimport coverImage from '../img/cover.png';\n\nconst SingleCard = ({ card, handleChoice, flipped, disabled }) => {\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card);\n    }\n  };\n  return (\n    <div key={card.id} className='card'>\n      <div className={flipped ? 'flipped' : ''}>\n        <img className='front' src={card.src} alt='card front' />\n        <img\n          className='back'\n          onClick={handleClick}\n          src={coverImage}\n          alt='card back'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleCard;\n","export default __webpack_public_path__ + \"static/media/helmet-1.d082cb3c.png\";","export default __webpack_public_path__ + \"static/media/potion-1.94e34273.png\";","export default __webpack_public_path__ + \"static/media/ring-1.4c376e3f.png\";","export default __webpack_public_path__ + \"static/media/scroll-1.135e1c7d.png\";","export default __webpack_public_path__ + \"static/media/shield-1.a961da95.png\";","export default __webpack_public_path__ + \"static/media/sword-1.47dbfbdd.png\";","export default __webpack_public_path__ + \"static/media/dingcorrect.59723c91.wav\";","export default __webpack_public_path__ + \"static/media/shuffle.c579258f.wav\";","export default __webpack_public_path__ + \"static/media/cardflip.212bebaf.wav\";","export default __webpack_public_path__ + \"static/media/dingwrong.85e74080.wav\";","import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\nimport helmetImage from './img/helmet-1.png';\nimport potionImage from './img/potion-1.png';\nimport ringImage from './img/ring-1.png';\nimport scrollImage from './img/scroll-1.png';\nimport shieldImage from './img/shield-1.png';\nimport swordImage from './img/sword-1.png';\n\nimport matchCorrect from './Sounds/dingcorrect.wav';\nimport shuffle from './Sounds/shuffle.wav';\nimport cardFlip from './Sounds/cardflip.wav';\nimport matchWrong from './Sounds/dingwrong.wav';\n\nconst cardImages = [\n  { src: helmetImage, matched: false },\n  { src: potionImage, matched: false },\n  { src: ringImage, matched: false },\n  { src: scrollImage, matched: false },\n  { src: shieldImage, matched: false },\n  { src: swordImage, matched: false },\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  let match = new Audio(matchCorrect);\n  let flip = new Audio(cardFlip);\n  let shuffle_cards = new Audio(shuffle);\n  let wrong = new Audio(matchWrong);\n  // match.play();\n\n  const recordTime = 0;\n\n  // shuffle cards\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setChoiceOne(null);\n    setChoiceTwo(null);\n\n    setCards(shuffledCards);\n    setTurns(0);\n    shuffle_cards.play();\n  };\n\n  const gameOver = () => {\n    // cardImages.filter((card) => !card.matched).length === 0;\n    // setCounter(0);\n    // FIXME: add game over screen && change timer and reset game\n  };\n\n  // handle choice\n\n  const handleChoice = (card) => {\n    // console.log(card)\n\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // compare 2 selected cards\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      const isMatch = choiceOne.src === choiceTwo.src;\n\n      setDisabled(true);\n\n      if (isMatch) {\n        console.log('match');\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n        match.play();\n      } else {\n        setTimeout(\n          () => resetTurn(),\n          // console.log('no match')\n          1000\n        );\n        wrong.play();\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  // reset choice & increase turns\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns((turns) => turns + 1);\n    setDisabled(false);\n  };\n\n  //TODO: TIMER\n\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    const timer =\n      counter >= 0 && setInterval(() => setCounter(counter + 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  return (\n    <div className='App'>\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className='board'>\n        <p>Turns: {turns}</p>\n        <p>Countdown: {counter}</p>\n      </div>\n      <div className='card-grid'>\n        {cards.map((card) => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}